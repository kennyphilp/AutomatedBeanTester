package com.kwp.automatedbeantester.testclasses;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import com.kwp.automatedbeantester.beaninfo.*;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.Map;

import static junit.framework.TestCase.assertNull;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class BeanInformationTest {

    private static final Logger LOGGER = LoggerFactory.getLogger(BeanInformationTest.class);

    @Test
    public void testBeanFactory() {
        BeanInformation beanInformation = null;
        try {
            beanInformation = BeanInformationFactory.getInstance(TestBeanClass.class);
        } catch (BeanProcessingException e) {
            e.printStackTrace();
        }

        assertNotNull((beanInformation));
        assertEquals(2, beanInformation.getProperyNames().size());

        beanInformation.getProperyNames().stream().forEach(member->LOGGER.info("BeanMember:"+member));
        assertEquals("com.kwp.automatedbeantester.beaninfo.TestBeanClass",beanInformation.getClassName());

        Map<String, Method> readMethods=beanInformation.getReadMethods();
        assertNotNull(readMethods);
        readMethods.keySet().stream().forEach(readMethodName->LOGGER.info("ReadMethod:"+readMethodName));
        assertEquals(2,readMethods.size());

        Map<String, Method> writeMethods=beanInformation.getWriteMethods();
        assertNotNull(writeMethods);
        writeMethods.keySet().stream().forEach(writeMethodName->LOGGER.info("WriteMethod:"+writeMethodName));
        assertEquals(2,writeMethods.size());

        Map<String, Field> fields=beanInformation.getFields();
        assertNotNull(fields);
        fields.keySet().stream().forEach(fieldName->LOGGER.info("Field:"+fieldName));
        assertEquals(2,fields.size());


    }



}
